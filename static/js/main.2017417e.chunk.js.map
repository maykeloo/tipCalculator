{"version":3,"sources":["compoennts/Home/homeElements.js","compoennts/Home/index.js","App.js","index.js"],"names":["App","styled","div","ContentBox","BillValueBox","ResultBox","BillAbountBar","InputLabel","label","TipButtonsBar","NumberOfPeopleBar","TextAboutDiv","span","InputNumber","input","attrs","type","max","DollarIcon","BiDollarCircle","ButtonsBar","TipButton","button","CustomTipInput","placeholder","PeopleIcon","MdPersonOutline","CalculationsBar","CalcBar","SummaryButtonsBar","CalcTextBar","CalcTextTitle","CalcExtraInfo","Result","ResetButton","PayButton","Home","oneOfButtons","map","onClick","e","setTipValue","target","value","useState","billValue","setBillValue","tipValue","peopleAmount","setPeopleAmount","reset","onChange","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAIaA,EAAMC,IAAOC,IAAV,+KASHC,EAAaF,IAAOC,IAAV,oqBA6BVE,EAAeH,IAAOC,IAAV,mRAeZG,EAAYJ,IAAOC,IAAV,gXAkBTI,EAAgBL,IAAOC,IAAV,gHAObK,EAAaN,IAAOO,MAAV,0MAUVC,EAAgBR,IAAOC,IAAV,sFAMbQ,EAAoBT,IAAOC,IAAV,+DAKjBS,EAAeV,IAAOW,KAAV,8FAKZC,EAAcZ,IAAOa,MAAMC,OAAM,iBAAO,CACjDC,KAAM,SACNC,IAAK,UAFkBhB,CAAH,2QAiBXiB,EAAajB,YAAOkB,IAAPlB,CAAH,yFAMVmB,EAAanB,IAAOC,IAAV,2KASVmB,EAAYpB,IAAOqB,OAAV,wbAuBTC,EAAiBtB,IAAOa,MAAMC,OAAM,iBAAO,CACpDC,KAAM,SACNQ,YAAa,YAFavB,CAAH,mTAkBdwB,EAAaxB,YAAOyB,IAAPzB,CAAH,yFAMV0B,EAAkB1B,IAAOC,IAAV,mQAcf0B,EAAU3B,IAAOC,IAAV,kJAQP2B,EAAoB5B,IAAOC,IAAV,kJAQjB4B,GAAc7B,IAAOC,IAAV,8IAQX6B,GAAgB9B,IAAOW,KAAV,mHAMboB,GAAgB/B,IAAOW,KAAV,oHAMbqB,GAAShC,IAAOW,KAAV,qHAMNsB,GAAcjC,IAAOqB,OAAV,6PAeXa,GAAYlC,IAAOqB,OAAV,ga,QC/HPc,GAhIF,WAET,IACMC,EADU,CAAC,EAAG,GAAI,GAAI,GAAI,IACHC,KAAI,SAAAhB,GAAM,OAAI,gBAACD,EAAD,CAAWkB,QAAW,SAAAC,GAAC,OAAIC,EAAYD,EAAEE,OAAOC,QAAQA,MAASrB,EAAjE,UAA0EA,EAA1E,UAH5B,EAKmBsB,mBAAS,IAL5B,mBAKRC,EALQ,KAKGC,EALH,OAQiBF,mBAAS,IAR1B,mBAQRG,EARQ,KAQEN,EARF,OAWyBG,mBAAS,GAXlC,mBAWRI,EAXQ,KAWMC,EAXN,KAeTC,EAAQ,WACVJ,EAAa,GACbL,EAAY,GACZQ,EAAgB,IAGpB,OACI,qCACI,eAAC,EAAD,UACI,gBAAC9C,EAAD,WAKI,gBAACC,EAAD,WAII,gBAACE,EAAD,WACI,eAACK,EAAD,mBAIA,gBAACJ,EAAD,WACI,eAACW,EAAD,IACA,eAACL,EAAD,CAAasC,SAlCf,SAAAX,GAAC,OAAIM,EAAaN,EAAEE,OAAOC,QAkCmBA,MAASE,UAS7D,gBAACpC,EAAD,WACI,eAACE,EAAD,yBAIA,gBAACS,EAAD,WACKiB,EACD,eAACd,EAAD,CAAgB4B,SA/CpB,SAAAX,GAAC,OAAIC,EAAYD,EAAEE,OAAOC,QA+CuBA,MAASI,UAO9D,gBAACrC,EAAD,WACI,eAACC,EAAD,+BAGA,gBAACJ,EAAD,WACI,eAACkB,EAAD,IACA,eAACZ,EAAD,CAAasC,SAzDb,SAAAX,GAAC,OAAIS,EAAgBT,EAAEE,OAAOC,QAyDgBA,MAASK,aAUnE,gBAAC3C,EAAD,WACI,gBAACsB,EAAD,WACI,gBAACC,EAAD,WACI,gBAACE,GAAD,WACI,eAACC,GAAD,yBAGA,eAACC,GAAD,0BAKJ,gBAACC,GAAD,eACMY,GAAcA,GAAaE,EAAW,MAASC,GAA8B,IAAII,QAAQ,GAAK,UAIxG,gBAACxB,EAAD,WACI,gBAACE,GAAD,WACI,eAACC,GAAD,oBAGA,eAACC,GAAD,0BAKJ,gBAACC,GAAD,eACMY,GAAaA,GAAaG,GAA8B,IAAII,QAAQ,GAAK,WAKvF,gBAACvB,EAAD,WACI,eAACK,GAAD,CAAaK,QAAWW,EAAxB,mBAIA,eAACf,GAAD,CAAWI,QAAWW,EAAtB,+BC7GblD,OARf,WACE,OACE,qCACE,eAAC,GAAD,OCFNqD,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2017417e.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {BiDollarCircle} from 'react-icons/bi';\nimport {MdPersonOutline} from 'react-icons/md'\n\nexport const App = styled.div`\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #76D7C4;\n`\n\nexport const ContentBox = styled.div`\n    height: 80vh;\n    width: 60vw;\n    background-color: white;\n    border-radius: 5px;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    -webkit-box-shadow: 17px 17px 37px 0px rgba(0, 0, 0, 0.3);\n    -moz-box-shadow: 17px 17px 37px 0px rgba(0, 0, 0, 0.3);\n    box-shadow: 17px 17px 37px 0px rgba(0, 0, 0, 0.3);\n    position: relative;\n\n\n\n    @media screen and (max-width: 1100px)\n    {\n        flex-direction: column;\n        justify-content: space-around;\n        align-items: center;\n        height: 95vh;\n    }\n\n    @media screen and (max-width: 920px)\n    {\n        width: 95%;\n    }\n`\n\nexport const BillValueBox = styled.div`\n    height: 80%;\n    width: 45%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n\n    @media screen and (max-width: 1100px)\n    {\n        width: 90%;\n        margin-top: 50px;\n    }\n`\n\nexport const ResultBox = styled.div`\n    height: 90%;\n    width: 45%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    background-color: #006652;\n    border-radius: 5px;\n\n    @media screen and (max-width: 1100px)\n    {\n        width: 80%;\n        margin-bottom: 50px;\n        margin-top: 30px;\n    }\n`\n\nexport const BillAbountBar = styled.div`\n    height: 25%;\n    width: 90%;\n    display: flex;\n    flex-direction: column;\n`\n\nexport const InputLabel = styled.label`\n    background: #F5F5F5;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    margin-top: 5px;\n    justify-content: space-between;\n    border-radius: 3px;\n`\n\nexport const TipButtonsBar = styled.div`\n    height: 50%;\n    width: 90%;\n    margin-top: 30px;\n`\n\nexport const NumberOfPeopleBar = styled.div`\n    height: 25%;\n    width: 90%;\n`\n\nexport const TextAboutDiv = styled.span`\n    font-family: 'Roboto Mono', sans-serif;\n    color: #76D7C4;\n`\n\nexport const InputNumber = styled.input.attrs(() => ({\n    type: 'number',\n    max: '2000',\n}))`\n    border-radius: 3px;\n    border: 0;\n    padding: 10px 20px;\n    height: 40px;\n    font-size: 25px;\n    outline: none;\n    font-weight: bold;\n    text-align: right;\n    width: 50%;\n    background: #F5F5F5;\n    color: #006652;\n`\n\nexport const DollarIcon = styled(BiDollarCircle)`\n    font-size: 25px;\n    width: 50px;\n    color: #D4D4D4;\n`\n\nexport const ButtonsBar = styled.div`\n    width: 100%;\n    height: 70%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nexport const TipButton = styled.button`\n    background: #006652;\n    padding: 15px;\n    width: 32%; \n    flex-wrap: wrap;\n    height: 45%;\n    border: 0;\n    text-align: center;\n    font-weight: bold;\n    font-size: 3vh;\n    font-family: 'Roboto Mono', sans-serif;\n    border-radius: 5px;\n    color: white;\n    cursor: pointer;\n    transition: 0.3s;\n\n    &:hover\n    {\n        color: black;\n        background-color: #03E7BA;\n    }\n`\n\nexport const CustomTipInput = styled.input.attrs(() => ({\n    type: 'number',\n    placeholder: 'Custom'\n}))`\n    width: 32%; \n    flex-wrap: wrap;\n    height: 45%; \n    padding: 0;\n    border: 0;\n    outline: none;\n    text-align: center;\n    font-weight: bold;\n    font-size: 15px;\n    font-family: 'Roboto Mono', sans-serif;\n    border-radius: 5px;\n    background: #F5F5F5;\n`\n\nexport const PeopleIcon = styled(MdPersonOutline)`\n    font-size: 25px;\n    width: 50px;\n    color: #D4D4D4;\n`\n\nexport const CalculationsBar = styled.div`\n    height: 35%;\n    width: 90%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n\n    @media screen and (max-width: 920px)\n    {\n        margin-top: 30px;\n    }\n`\n\nexport const CalcBar = styled.div`\n    height: 45%;\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const SummaryButtonsBar = styled.div`\n    height: 20vh;\n    width: 90%;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n`\n\nexport const CalcTextBar = styled.div`\n    width: 45%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center\n`\n\nexport const CalcTextTitle = styled.span`\n    font-family: 'Roboto Mono', sans-serif;\n    color: white;\n    font-size: 1.6vw;\n`\n\nexport const CalcExtraInfo = styled.span`\n    font-family: 'Roboto Mono', sans-serif;\n    color: #D4D4D4;\n    font-size: 12px;\n`\n\nexport const Result = styled.span`\n    font-family: 'Roboto Mono', sans-serif;\n    color: #03E7BA;\n    font-size: 2.5em;\n`\n\nexport const ResetButton = styled.button`\n    background: none;\n    border: 0;\n    font-family: 'Roboto Mono', sans-serif;\n    color: #03E7BA;\n    font-size: 1.5em;\n    cursor: pointer;\n    transition: 0.3s;\n\n    &:hover\n    {\n        color: white;\n    }\n`\n\nexport const PayButton = styled.button`\n    background: #03E7BA;\n    padding: 15px;\n    width: 55%; \n    height: 45%;\n    border: 0;\n    text-align: center;\n    font-weight: bold;\n    font-size: 3vh;\n    font-family: 'Roboto Mono', sans-serif;\n    border-radius: 5px;\n    color: black;\n    cursor: pointer;\n    transition: 0.3s;\n\n    &:hover\n    {\n        color: black;\n        background-color: white;\n    }\n`","import React, {useState} from 'react'\nimport { App, InputNumber, CalcBar, InputLabel, Result, PeopleIcon, TextAboutDiv, BillAbountBar, BillValueBox, ContentBox, NumberOfPeopleBar, ResultBox, TipButtonsBar, DollarIcon, ButtonsBar, TipButton, CustomTipInput, CalculationsBar, SummaryButtonsBar, CalcTextBar, CalcTextTitle, CalcExtraInfo, ResetButton, PayButton} from './homeElements'\n\nconst Home = () => {\n\n    const buttons = [5, 10, 15, 25, 50];\n    const oneOfButtons = buttons.map(button => <TipButton onClick = {e => setTipValue(e.target.value)} value = {button}>{button}%</TipButton>)\n\n    const [billValue, setBillValue] = useState('');\n    const billAmountHandler = e => setBillValue(e.target.value);\n\n    const [tipValue, setTipValue] = useState('');\n    const tipValueHandler = e => setTipValue(e.target.value)\n\n    const [peopleAmount, setPeopleAmount] = useState(1);\n    const peopleAmountHandler = e => setPeopleAmount(e.target.value);\n\n\n    const reset = () => {\n        setBillValue(0);\n        setTipValue(5);\n        setPeopleAmount(1);\n    }\n\n    return (\n        <>\n            <App>\n                <ContentBox>\n\n\n                    {/* Left Side -------------- */}\n                    \n                    <BillValueBox>\n\n                        {/* BillAmount */}\n\n                        <BillAbountBar>\n                            <TextAboutDiv>\n                                Bill\n                            </TextAboutDiv>\n                            \n                            <InputLabel>\n                                <DollarIcon/>\n                                <InputNumber onChange = {billAmountHandler} value = {billValue}>\n                                    \n                                </InputNumber>\n                            </InputLabel>\n                        </BillAbountBar>\n\n\n                        {/* TipAmount */}\n\n                        <TipButtonsBar>\n                            <TextAboutDiv>\n                                Tip Amount\n                            </TextAboutDiv>\n\n                            <ButtonsBar>\n                                {oneOfButtons}\n                                <CustomTipInput onChange = {tipValueHandler} value = {tipValue}/>\n                            </ButtonsBar>\n                        </TipButtonsBar>\n\n\n                        {/* PeopleAmount */}\n\n                        <NumberOfPeopleBar>\n                            <TextAboutDiv>\n                                Number of People\n                            </TextAboutDiv>\n                            <InputLabel>\n                                <PeopleIcon/>\n                                <InputNumber onChange = {peopleAmountHandler} value = {peopleAmount}/>\n                            </InputLabel>\n                        </NumberOfPeopleBar>\n                    </BillValueBox>\n\n\n\n\n                    {/* Right Side -------------- */}\n\n                    <ResultBox>\n                        <CalculationsBar>   \n                            <CalcBar>\n                                <CalcTextBar>\n                                    <CalcTextTitle>\n                                        Tip amount\n                                    </CalcTextTitle>\n                                    <CalcExtraInfo>\n                                        / person\n                                    </CalcExtraInfo>\n                                </CalcTextBar>\n\n                                <Result>\n                                    ${billValue ? ((billValue * (tipValue / 100)) / (peopleAmount ? peopleAmount : 1)).toFixed(2) : '0'}\n                                </Result>\n                            </CalcBar>\n\n                            <CalcBar>\n                                <CalcTextBar>\n                                    <CalcTextTitle>\n                                        Total\n                                    </CalcTextTitle>\n                                    <CalcExtraInfo>\n                                        / person\n                                    </CalcExtraInfo>\n                                </CalcTextBar>\n\n                                <Result>\n                                    ${billValue ? (billValue / (peopleAmount ? peopleAmount : 1)).toFixed(2) : 0.00}\n                                </Result>\n                            </CalcBar>\n                        </CalculationsBar>\n\n                        <SummaryButtonsBar>\n                            <ResetButton onClick = {reset}>\n                                Reset\n                            </ResetButton>\n\n                            <PayButton onClick = {reset}>\n                                Pay\n                            </PayButton>\n                        </SummaryButtonsBar>\n                    </ResultBox>\n                </ContentBox>\n            </App>  \n        </>\n    )\n}\n\nexport default Home\n","import './App.css';\nimport Home from './compoennts/Home';\n\nfunction App() {\n  return (\n    <>\n      <Home/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}